// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: signaling.proto

package proto;

public interface SignalingEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:SignalingEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Information with all available rooms
   * </pre>
   *
   * <code>optional .RoomsInfoEvent rooms_info = 1;</code>
   */
  proto.RoomsInfoEvent getRoomsInfo();
  /**
   * <pre>
   * Information with all available rooms
   * </pre>
   *
   * <code>optional .RoomsInfoEvent rooms_info = 1;</code>
   */
  proto.RoomsInfoEventOrBuilder getRoomsInfoOrBuilder();

  /**
   * <pre>
   * Room added by someone
   * </pre>
   *
   * <code>optional .RoomAddedEvent room_added = 2;</code>
   */
  proto.RoomAddedEvent getRoomAdded();
  /**
   * <pre>
   * Room added by someone
   * </pre>
   *
   * <code>optional .RoomAddedEvent room_added = 2;</code>
   */
  proto.RoomAddedEventOrBuilder getRoomAddedOrBuilder();

  /**
   * <pre>
   * Room removed by the system because it's empty
   * </pre>
   *
   * <code>optional .RoomRemovedEvent room_removed = 3;</code>
   */
  proto.RoomRemovedEvent getRoomRemoved();
  /**
   * <pre>
   * Room removed by the system because it's empty
   * </pre>
   *
   * <code>optional .RoomRemovedEvent room_removed = 3;</code>
   */
  proto.RoomRemovedEventOrBuilder getRoomRemovedOrBuilder();

  /**
   * <pre>
   * Room created (only the creator receives this event)
   * </pre>
   *
   * <code>optional .RoomCreatedEvent room_created = 4;</code>
   */
  proto.RoomCreatedEvent getRoomCreated();
  /**
   * <pre>
   * Room created (only the creator receives this event)
   * </pre>
   *
   * <code>optional .RoomCreatedEvent room_created = 4;</code>
   */
  proto.RoomCreatedEventOrBuilder getRoomCreatedOrBuilder();

  /**
   * <pre>
   * Room not created (only the creator receives this event)
   * </pre>
   *
   * <code>optional .RoomNotCreatedEvent room_not_created = 5;</code>
   */
  proto.RoomNotCreatedEvent getRoomNotCreated();
  /**
   * <pre>
   * Room not created (only the creator receives this event)
   * </pre>
   *
   * <code>optional .RoomNotCreatedEvent room_not_created = 5;</code>
   */
  proto.RoomNotCreatedEventOrBuilder getRoomNotCreatedOrBuilder();

  /**
   * <pre>
   * Someone joined the room
   * </pre>
   *
   * <code>optional .UserJoinedEvent user_joined = 6;</code>
   */
  proto.UserJoinedEvent getUserJoined();
  /**
   * <pre>
   * Someone joined the room
   * </pre>
   *
   * <code>optional .UserJoinedEvent user_joined = 6;</code>
   */
  proto.UserJoinedEventOrBuilder getUserJoinedOrBuilder();

  /**
   * <pre>
   * Someone left the room
   * </pre>
   *
   * <code>optional .UserLeftEvent user_left = 7;</code>
   */
  proto.UserLeftEvent getUserLeft();
  /**
   * <pre>
   * Someone left the room
   * </pre>
   *
   * <code>optional .UserLeftEvent user_left = 7;</code>
   */
  proto.UserLeftEventOrBuilder getUserLeftOrBuilder();

  /**
   * <pre>
   * The user who is trying to join has joined (only he receives it)
   * </pre>
   *
   * <code>optional .RoomJoinedEvent room_joined = 8;</code>
   */
  proto.RoomJoinedEvent getRoomJoined();
  /**
   * <pre>
   * The user who is trying to join has joined (only he receives it)
   * </pre>
   *
   * <code>optional .RoomJoinedEvent room_joined = 8;</code>
   */
  proto.RoomJoinedEventOrBuilder getRoomJoinedOrBuilder();

  /**
   * <pre>
   * The user who is trying to join has not joined (only he receives it)
   * </pre>
   *
   * <code>optional .RoomNotJoinedEvent room_not_joined = 9;</code>
   */
  proto.RoomNotJoinedEvent getRoomNotJoined();
  /**
   * <pre>
   * The user who is trying to join has not joined (only he receives it)
   * </pre>
   *
   * <code>optional .RoomNotJoinedEvent room_not_joined = 9;</code>
   */
  proto.RoomNotJoinedEventOrBuilder getRoomNotJoinedOrBuilder();

  /**
   * <pre>
   * The user who is trying to leave has leaved (only he receives it)
   * </pre>
   *
   * <code>optional .RoomLeftEvent room_left = 10;</code>
   */
  proto.RoomLeftEvent getRoomLeft();
  /**
   * <pre>
   * The user who is trying to leave has leaved (only he receives it)
   * </pre>
   *
   * <code>optional .RoomLeftEvent room_left = 10;</code>
   */
  proto.RoomLeftEventOrBuilder getRoomLeftOrBuilder();

  /**
   * <pre>
   * The user who is trying to leave has not leaved (only he receives it)
   * </pre>
   *
   * <code>optional .RoomNotLeftEvent room_not_left = 11;</code>
   */
  proto.RoomNotLeftEvent getRoomNotLeft();
  /**
   * <pre>
   * The user who is trying to leave has not leaved (only he receives it)
   * </pre>
   *
   * <code>optional .RoomNotLeftEvent room_not_left = 11;</code>
   */
  proto.RoomNotLeftEventOrBuilder getRoomNotLeftOrBuilder();

  /**
   * <pre>
   * Someone in the room has send message
   * </pre>
   *
   * <code>optional .MessageReceived message_received = 12;</code>
   */
  proto.MessageReceived getMessageReceived();
  /**
   * <pre>
   * Someone in the room has send message
   * </pre>
   *
   * <code>optional .MessageReceived message_received = 12;</code>
   */
  proto.MessageReceivedOrBuilder getMessageReceivedOrBuilder();

  /**
   * <pre>
   * Someone send message successfully (only he receives it)
   * </pre>
   *
   * <code>optional .MessageSendEvent message_send = 13;</code>
   */
  proto.MessageSendEvent getMessageSend();
  /**
   * <pre>
   * Someone send message successfully (only he receives it)
   * </pre>
   *
   * <code>optional .MessageSendEvent message_send = 13;</code>
   */
  proto.MessageSendEventOrBuilder getMessageSendOrBuilder();

  /**
   * <pre>
   * Someone couldn't send message (only he receives it)
   * </pre>
   *
   * <code>optional .MessageNotSendEvent message_not_send = 14;</code>
   */
  proto.MessageNotSendEvent getMessageNotSend();
  /**
   * <pre>
   * Someone couldn't send message (only he receives it)
   * </pre>
   *
   * <code>optional .MessageNotSendEvent message_not_send = 14;</code>
   */
  proto.MessageNotSendEventOrBuilder getMessageNotSendOrBuilder();

  public proto.SignalingEvent.EventCase getEventCase();
}
